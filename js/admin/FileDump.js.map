{
  "version": 3,
  "sources": [
    "FileDump.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class FileDump\n    constructor: (opts) ->\n        @opts = $.extend\n            workerUri: null\n        , opts\n        @setupCreateButton()\n        .setupDumpButtons()\n\n    setupCreateButton: ->\n        $ '[data-action=\"create.files\"]'\n        .on 'click', =>\n            @log 'Creating files dump...'\n            $.post @opts.workerUri + 'create', {}, (res) =>\n                if res.ok\n                    @log 'Files dump created'\n                else\n                    @log 'Error: ' + res.message\n            false\n        @\n\n    setupDumpButtons: ->\n        self = @\n        $(document.body)\n        .on 'click', '[data-type=\"file\"] button[data-action=\"restore\"]', ->\n            self.restoreDump $(this).closest('[data-filename]').data('filename')\n        .on 'click', '[data-type=\"file\"] button[data-action=\"download\"]', ->\n            self.downloadDump $(this).closest('[data-filename]').data('filename')\n        .on 'click', '[data-type=\"file\"] button[data-action=\"delete\"]', ->\n            self.deleteDump $(this).closest('[data-filename]').data('filename')\n        @\n\n    addDumpRow: (res) ->\n        #sizeStr = res.size and (', ' + size_in_bytes(res.size))\n        sizeStr = ', <span data-field=\"size\">...</span>'\n\n        console.log $('.db-dump-rows[data-type=\"file\"] tbody tr:first-child').length\n\n        $('.db-dump-rows[data-type=\"file\"] tbody tr:first-child').after '<tr data-filename=\"{0}\">'.format(res.file) +\n            '<td><b>' + res.file + '</b> ' +\n            '<small>(' + (new Date().toLocaleString()) + sizeStr + ')</small></td>' +\n            '<td>' +\n            #'<button type=\"button\" data-action=\"restore\">Restore</button> ' +\n            '<button type=\"button\" data-action=\"download\">Download</button> ' +\n            '<button type=\"button\" data-action=\"delete\">Delete</button>' +\n            '</td></tr>'\n\n        $size = $('.db-dump-rows[data-type=\"file\"] tr[data-filename=\"{0}\"]'.format(res.file))\n        prev_size = 0\n\n        interval = setInterval =>\n            $.get @opts.workerUri + 'update_size/', {}, (res) =>\n                $size.html size_in_bytes res.size\n                clearInterval(interval) if prev_size is res.size\n                prev_size = res.size\n        , 2000\n\n    @\n\n    restoreDump: (file, folderId) ->\n        return @ unless confirm \"Are your sure you want to restore this file dump?\\nWarning! Current files might be deleted or damaged!\"\n\n        @log 'Restoring file dump ' + file + '...'\n        @worker 'restore',\n            file: file\n            folderId: folderId\n        @\n\n    downloadDump: (file, folderId) ->\n        @log 'Downloading file dump ' + file + '...'\n        @worker 'download',\n            file: file\n            folderId: folderId\n        @\n\n    deleteDump: (file) ->\n        return @ unless confirm 'Are you sure you want to delete the file dump ' + file + '?'\n\n        @log 'Deleting file dump ' + file + '...'\n        @worker 'delete',\n            file: file\n            folderId: 1\n        @\n\n    worker: (action, options) ->\n        options = file: options if typeof options isnt 'object'\n\n        options = $.extend\n            file: ''\n            folderId: 0\n        , options\n\n        urlBase = @opts.workerUri + action + '/'\n\n        if action is 'download'\n            options.headers = 1\n            window.location.href = urlBase + '?' + $.param(options)\n            return false\n\n        $.get urlBase, options, (res) =>\n            unless res.ok\n                @log 'Unable to complete action `' + action + '` with file `' + options.file + '`'\n                return false\n\n            if action is 'create'\n                @log 'Dump has been created'\n                @addDumpRow res\n            else if action is 'restore'\n                @log 'Dump ' + options.file + ' has been successfully restored'\n            else if action is 'delete'\n                @log res.file + ' has been deleted'\n                $('.db-dump-rows[data-type=\"file\"] tbody tr[data-filename=\"' + res.file + '\"]').fadeOut()\n            else\n                @log 'Unknown action \"' + action + '\"'\n\n        @\n\n    log: (message) ->\n        A.console.add message\n        @\n\n    error: (message) ->\n        alert message\n        @\n"
  ],
  "sourceRoot": ""
}